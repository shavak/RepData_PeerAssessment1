2 + 2;
2 + 2
x + y
add2 <- function(x, y) {
x + y
}
mean
getwd()
cube <- function(x, n){}
x^3
cube <- function(x, n){ x^3 }
cube(3)
x <- 1:10
if(x > 5) { x <- 0}
source('~/rprog-015/quiz_2.R')
z <- 10
f(3)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col ="blue")
abline(h = 0.4, col = "red")
5
12
abline(h = 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"))
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, col = cols1[newClust], pch = 19, cex = 2)
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, col = cols1[newClust2], pch = 19, cex = 2)
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = cex = lwd = 3)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[, 1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[, c(1, 2)]
svd2$d
dim(faceData)
(svd$d[1])*(svd$u[, 1] %*% svd$v[, 1])
(svd$d[1])*(svd$u[, 1]) %*% (svd$v[, 1])
(svd1$d[1])* ((svd1$u[, 1]) %*% (svd1$v[, 1]))
a1 <- (svd1$d[1])* ((svd1$u[, 1]) %*% t(svd1$v[, 1]))
a1 <- (svd1$u[, 1] * svd1$d[1]) %*% t(svd1$v[, 1])
myImage(a1)
a2 <- svd1$u[, 1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[, 1:2])
myImage(a2)
myImage(svd1$u[, 1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[, 1:5]))
myImage(svd1$u[, 1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[, 1:10]))
source('~/exdata-032/project_2/plot6.R')
library(swirl)
swirl()
dim(ssd)
names(ssd[, c(562, 563)])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[, 1:12])
myedit(showXY.R)
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[, 1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[, 2])
mdist <- dist(sub1[, c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
install.package("knitr")
install.packages("knitr")
setwd("~/repdata-033/RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
head(activity)
tail(activity)
str(activity)
activity <- read.csv("activity.csv", colClasses = c("int", "Date", "Factor"))
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "Factor"))
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "factor"))
str(activity)
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
str(activity)
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%yyyy-%mm-%dd")
str(activity)
activity$date <- as.Date(activity$date, "%y-%m-%d")
str(activity)
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%y-%m-%d")
str(activity)
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
str$date[1]
activity$date[1]
activity <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
str(activity)
#comment
head(activity)
s <- split(activity, activty$date)
s <- split(activity, activity$date)
str(s)
library(dplyr)
library(ggplot2)
activity.by_day <- select(activity, c(steps, date))
head(activity.by_day)
actest <- group_by(activity.by_day, date)
str(actest)
summarise(actest, total_steps = sum(steps, na.rm = TRUE))
y <- summarise(actest, total_steps = sum(steps, na.rm = TRUE))
plot(y)
hist(y)
hist(y$total_steps)
hist(y$date)
plot(y, type = "h")
qplot(y)
qplot(y, total_steps, date, geom = "histogram")
qplot(date, total_steps, data = y, geom = "histogram")
qplot(date, total_steps, data = y)
qplot(date, total_steps, data = y, geom = "bar")
qplot(date, total_steps, data = y)
qplot(date, data = y, geom = "histogram", weight = total_steps)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1/61)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 20)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = "1 day")
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = .5)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 61)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 30)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 2)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 4)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1, fill = green)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1, fill = "green")
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1, color = "green")
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1, color = "blue")
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1)
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1, main = "Total Number of Steps", xlab = "Date", ylab = "Number of steps", fill = I("green"), alpha = I(0.75))
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1, main = "Total Number of Steps", xlab = "Date", ylab = "Number of steps", fill = "green", alpha = I(0.75))
qplot(date, data = y, geom = "histogram", weight = total_steps, binwidth = 1, main = "Total Number of Steps", xlab = "Date", ylab = "Number of steps", fill = I("orange"), alpha = I(0.75))
group_by(activity, interval)
activity_by_interval <- summarise(group_by(activity, interval), avg_steps = mean(steps, na.rm = TRUE))
head(activity_by_interval)
tail(activity_by_interval)
qplot(avg_steps, interval, data = activity_by_interval)
qplot(interval, avg_steps, data = activity_by_interval)
qplot(interval, avg_steps, data = activity_by_interval, geom = "line")
qplot(interval, avg_steps, data = activity_by_interval, geom = "line", col = I("red"))
activity_by_interval2 <- activity_by_interval
library(lubridate)
duration(activity_by_interval2$interval, units = "minutes")
activity_by_interval2$interval <- duration(activity_by_interval2$interval, units = "minutes")
qplot(interval, avg_steps, data = activity_by_interval2, geom = "line", col = I("red"))
duration(9)
duration(9)/60
library(chron)
library(zoo)
times("00:00:01")
typeof(times("00:00:01"))
activity_by_interval2$interval <- seq(times("00:00:00"), times("23:59:59"), by = times("00:05:00"))
activity_by_interval2$interval
length(seq(times("00:00:00"), times("23:59:59"), by = times("00:05:00")))
qplot(interval, avg_steps, data = activity_by_interval2, geom = "line", col = I("red"))
z <- zoo(1:288, activity_by_interval2$interval)
z
activity_by_interval2$interval <- z
qplot(interval, avg_steps, data = activity_by_interval2, geom = "line", col = I("red"))
qplot(interval, avg_steps, data = activity_by_interval, geom = "line", col = I("red"))
z <- zoo(activity_by_interval2$avg_steps, activity_by_interval2$interval)
z
autoplot(z)
activity_by_interval2 <- activity_by_interval
head(activity_by_interval2)
z <- zoo(activity_by_interval$avg_steps, seq(times("00:00:00"), times("23:59:59"), by = times("00:05:00")))
z
autoplot(z)
strptime(10, format = "%M")
strptime(2000, format = "%M")
times(00:00:05)
times("00:00:05")
typeof(times("00:00:05"))
z1 <- zooreg(1:12, times("07:00:00"), freq = 24)
plot(z1)
plot(z1, type = "0")
plot(z1, type = "o")
autoplot(z1)
plot(z)
z <- zooreg(activity_by_interval$avg_steps, seq(times("00:00:00"), times("23:59:59"), by = times("00:05:00")))
plot(z)
autoplot(z)
z1 <- zooreg(1:288, times("00:00:00"), freq = 288)
z1
plot(z1)
z1 <- zooreg(1:12, times("07:00:00"), freq = 24)
plot(z1)
z1 <- zooreg(1:12, times("07:00:00"), freq = 12)
plot(z1)
z1 <- zooreg(1:12, times("07:00:00"), freq = 24 * 60)
plot(z1)
z1 <- zooreg(1:12, times("07:00:00"), freq = 24 * 60/5)
plot(z1)
z1 <- zooreg(1:288, times("00:00:00"), freq = 24 * 60/5)
plot(z1)
z1 <- zooreg(1:12, times("07:00:00"), freq = 24 * 60/5)
plot(z1)
z1 <- zooreg(1:12, times("07:00:00"), freq = 24 * 12)
plot(z1)
z1 <- zooreg(1:13, times("07:00:00"), freq = 24 * 12)
plot(z1)
z1 <- zooreg(1:288, times("07:00:00"), freq = 24 * 12)
plot(z1)
z1 <- zooreg(1:12, times("00:00:00"), freq = 24 * 12)
plot(z1)
z1 <- zooreg(1:288, times("00:00:00"), freq = 24 * 12)
xyplot(z1)
plot(z1)
tumes <- times(z1)
tumes
z1 <- zooreg(activity_by_interval2$avg_steps, times("00:00:00"), freq = 24 * 12)
plot(z1)
plot(z1, major.ticks = "hours")
plot(z1, xaxt = "n")
plot(z1, xaxt = "n")
autoplot(z1, xaxt = "n")
z2 <- fortify(z1)
head(z2)
qplot(z1, Index, data = z2)
qplot(Index, z1, data = z2)
qplot(Index, z1, data = z2, geom = "line")
?plot.zoo
tumes <- times(z1)
z1
tumes
plot(z1, xaxt = "n")
ticks <- seq(tumes[1], tumes[length(tumes)], by = "hours")
ticks <- seq(times("00:00:00"), times("23:59:59"), by = times("02:00:00"))
ticks
axis(1, at = ticks, labels = FALSE)
axis(1, at = ticks)
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
max_k
max_j
activity_by_interval$interval[104]
activity_by_interval$interval[101]
activity_by_interval$interval[105]
activity_by_interval[105, ]
activity_by_interval[104, ]
install.packages("impute")
library(impute)
