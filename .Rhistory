2 + 2;
2 + 2
x + y
add2 <- function(x, y) {
x + y
}
mean
getwd()
cube <- function(x, n){}
x^3
cube <- function(x, n){ x^3 }
cube(3)
x <- 1:10
if(x > 5) { x <- 0}
source('~/rprog-015/quiz_2.R')
z <- 10
f(3)
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col ="blue")
abline(h = 0.4, col = "red")
5
12
abline(h = 0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"))
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, col = cols1[newClust], pch = 19, cex = 2)
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, col = cols1[newClust2], pch = 19, cex = 2)
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = cex = lwd = 3)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[, 1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[, c(1, 2)]
svd2$d
dim(faceData)
(svd$d[1])*(svd$u[, 1] %*% svd$v[, 1])
(svd$d[1])*(svd$u[, 1]) %*% (svd$v[, 1])
(svd1$d[1])* ((svd1$u[, 1]) %*% (svd1$v[, 1]))
a1 <- (svd1$d[1])* ((svd1$u[, 1]) %*% t(svd1$v[, 1]))
a1 <- (svd1$u[, 1] * svd1$d[1]) %*% t(svd1$v[, 1])
myImage(a1)
a2 <- svd1$u[, 1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[, 1:2])
myImage(a2)
myImage(svd1$u[, 1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[, 1:5]))
myImage(svd1$u[, 1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[, 1:10]))
source('~/exdata-032/project_2/plot6.R')
library(swirl)
swirl()
dim(ssd)
names(ssd[, c(562, 563)])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[, 1:12])
myedit(showXY.R)
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[, 1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[, 2])
mdist <- dist(sub1[, c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
install.package("knitr")
install.packages("knitr")
# Shavak Sinanan
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
source("https://bioconductor.org/biocLite.R")
biocLite("impute")
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
setwd("~/repdata-033/RepData_PeerAssessment1")
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
impute.knn(as.matrix(activity$steps))
as.matrix(activty$steps)
as.matrix(activity$steps)
M <- as.matrix(activity$steps)
dim(M)
impute.knn(M)
v <- activity$steps
v[1]
v[bad_rows]
bad_rows <- !complete.cases(activity)
v[bad_rows]
dim(v[bad_rows])
length(v[bad_rows])
v[bad_rows] <- activity_by_interval$avg_steps[bad_rows]
v[bad_rows]
v
u = c(1:4, NA, 7:10)
u
is.na(u)
w = c(1:4, 5, 7:10)
u[is.na(u)] <- w[is.na(u)]
u
v[is.na(v)] <- activity_by_interval$avg_steps[is.na(v)]
sum(is.na(v))
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
v <- activity$steps
sum(is.na(v[bad_rows]))
u <- activity_by_interval$avg_steps
sum(is.na(u))
v[bad_rows]
v[bad_rows] <- u[bad_rows]
v[bad_rows]
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
u = c(1:4, NA, 7:10)
w = c(1:4, 5.5, 7:10)
u[is.na(u)] <- w[is.na(u)]
u
u <- activity$steps
v <- vector(activity_by_interval$avg_steps)
v <- activity_by_interval$avg_steps
typeof(v)
typeof(u)
v
typeof(w)
s <- split(activity, activity$interval)
s
typeof(s)
s[1]
typeof(s[1])
sapply(s, function(x) {})
sapply(s, function(x) { x$steps[is.na(x$steps)] <- activity_by_interval$avg_steps[x$interval[1] / 5 + 1]})
lapply(s, function(x) { x$steps[is.na(x$steps)] <- activity_by_interval$avg_steps[x$interval[1] / 5 + 1]})
dfl <- lapply(s, function(x) { x$steps[is.na(x$steps)] <- activity_by_interval$avg_steps[x$interval[1] / 5 + 1]})
dfl
s <- split(activity, activity$date)
dfl <- lapply(s, function(x) { x$steps[is.na(x$steps)] <- activity_by_interval$avg_steps[is.na(x$steps)]})
dfl[1]
head(activity)
head(activity, 288)
activity[289: 289+287]
activity[289: 289+287, ]
activity[289:(289+287), ]
dfl[2]
dfl[1]
dfl[2]
dfl[3]
s <- split(activity, activity$date)
s[1]
s[2]
s[3]
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
s <- split(activity, activity$date)
s[1]
dim(s[1])
size(s[1])
sizeof(s[1])
str(s[1])
str(s[[1])
str(s[[1]])
impute_steps(s[[1]])
impute_steps(s[[2]])
impute_steps(s[[3]])
s[[3]]
s[[3]]$steps == impute_steps(s[[3]])$steps
s[[3]]$steps = impute_steps(s[[3]])$steps
s[[3]]$steps == impute_steps(s[[3]])$steps
dfl <- lapply(s, impute_steps)
dfl
dfl[1]
dfl[[1]
]
df <- sapply(s, impute_steps)
df[[1]]
df <- lapply(s, impute_steps)
dfl <- lapply(s, impute_steps)
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
with(activity, tapply(steps, date, impute_steps))
head(activity)
with(activity, tapply(steps, date, impute_steps))
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
with(activity, tapply(steps, date, impute_steps))
head(activity)
install.packages("data.table")
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
head(patched_activity)
sum(is.na(patched_activity$steps))
activity_by_interval$avg_steps
1.02^{4}
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
patched_activity_by_day <- summarise(group_by(patched_activity, date), total_steps = sum(steps, na.rm = TRUE))
mean(patched_activity_by_day$total_steps)
?options
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
is.weekend(patched_activity$date)
fac<- is.weekend(patched_activity$date)
fac[785]
head(fac)
factor(fac, labels = ("weekday", "weekend"))
factor(fac, labels = c("weekday", "weekend"))
testfc <- factor(fac, labels = c("weekday", "weekend"))
testfc[785]
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
day_type[785]
length(day_type)
patched_activity_aug <- cbind(patched_activity, day_type)
head(patched_activity_aug)
new_fac <- with(patched_activity_aug, interaction(interval, day_type))
head(new_fac)
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
head(patched_activity)
patched_activity_dt <- data.table(patched_activity)
foo <- patched_activity_dt[, mean(steps), by = c("interval", "day_type")]
head(foo)
foo <- patched_activity_dt[, avg_steps = mean(steps), by = c("interval", "day_type")]
foo <- patched_activity_dt[, avg_steps <- mean(steps), by = c("interval", "day_type")]
head(foo)
qplot(interval, V1, data = foo, facets = . ~ day_type)
qplot(interval, V1, data = foo, facets = day_type ~ ., geom = "line", col = I("yellow"))
qplot(interval, V1, data = foo, facets = day_type ~ ., geom = "line", col = I("purple"))
source('~/repdata-033/RepData_PeerAssessment1/PA1_scratch.R')
